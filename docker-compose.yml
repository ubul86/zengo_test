version: '3.4'

services:
  site:
    build:
      dockerfile: site/Dockerfile
      context: .
      target: dev
    depends_on:
      - db
    env_file:
      - .env
    ports:
      - 13300:80
    environment:
      DB_HOST: db
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - "./src:/srv/app"  
    networks:
      - mynet

  db:
    image: mysql:5.7
    container_name: db
    env_file:
      - .env
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}    
    ports:
      - 13301:3306    
    networks:
      - mynet
    
  pma:
    image: phpmyadmin/phpmyadmin
    container_name: pma
    environment:
      - PMA_HOST=db
      - PMA_ARBITRARY=1
    ports:
      - "43235:80"    
    depends_on:
      - db
    networks:
      - mynet
      
  mailhog:
    image: mailhog/mailhog    
    ports:
      - 8025:8025
      - 11025:1025
    networks:
      - mynet  
   
  composer:
    image: composer
    volumes:
      - ./src:/app
    depends_on:
      - site
    entrypoint: ['composer', '--ignore-platform-reqs']
    working_dir: /app
    networks:
      - mynet

  npm:
    image: node:13.7
    volumes:
      - ./src:/app
    working_dir: /app
    entrypoint: ['npm']
    networks:
      - mynet
    
networks:
  mynet:
